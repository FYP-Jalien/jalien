stages:
  - unit
  - analysis
  - e2e

unit-test:
  image: openjdk:12
  script: ./gradlew test
  stage: unit
  artifacts:
    reports:
      junit: build/test-results/test/TEST-*.xml

e2e-test:
  image: registry.gitlab.com/finestructure/pipeline-trigger
  stage: e2e
  allow_failure: true
  script:
    - trigger -h gitlab.cern.ch -a "$API_TOKEN" -p "$CI_JOB_TOKEN" -t dev -e JALIEN_REPO=$CI_REPOSITORY_URL -e JALIEN_BRANCH=$CI_COMMIT_REF_NAME -e TRIGGER_SOURCE="JAliEn" 124456
#  variables:
#    JALIEN_REPO: $CI_REPOSITORY_URL
#    JALIEN_BRANCH: $CI_COMMIT_REF_NAME
#  trigger: gitlab.cern.ch/bertranf/jalien-ci
#  script:
#     - 'curl -X POST -F token=${CI_JOB_TOKEN} -F ref="dev" -F "variables[JALIEN_REPO]=$CI_REPOSITORY_URL" -F "variables[JALIEN_BRANCH]=$CI_COMMIT_REF_NAME" https://gitlab.cern.ch/api/v4/projects/124456/trigger/pipeline'

sonarqube-check:
  stage: analysis
  image: gradle:8.6-jdk17-jammy
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - gradle sonar
  allow_failure: true
  only:
    - master

sonarqube-vulnerability-report:
  stage: analysis
  script:
    - 'curl -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/issues/gitlab_sast_export?projectKey=jalien_jalien_78145297-78e8-46b6-8986-f2edbe8f5cce&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json'
  allow_failure: true
  only:
    - master
  artifacts:
    expire_in: 1 day
    reports:
      sast: gl-sast-sonar-report.json
  dependencies:
    - sonarqube-check
